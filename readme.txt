
[安装]


(1)选择geckodriver.mac或者geckodriver.ubuntu，不带后缀名复制进$PATH目录，例如
cp geckodriver.mac /usr/local/bin/geckodriver
(2)安装火狐
apt-get install firefox
(3)安装脚本环境
pip3 install -r requirements.txt



[命令行参数用法]


(1)基本语法
python3 like.py [IG用户] [IG密码] [代理地址:端口:用户:密码]
------------------------------------------------------------------------
除脚本名称外，其他参数均可不填。如果缺少必要信息，脚本运行时会在命令行询问。



python3 run.py [IG用户] [IG密码] [代理地址:端口:用户:密码] -t 任务1 [任务2] [任务3] ...
------------------------------------------------------------------------
使用run.py脚本需要指定--tasks(-t)参数。
任务名称，就是tasks文件夹里的任务文件的文件名，去掉.py后缀。




(2)功能型参数
-ap, --allocate-proxy
------------------------------------------------------------------------
后台自动分配代理。ap只在参数中缺少代理时发生作用，如果命令行已经给出代理参数，或pull中包含代理，ap将不生效。
【举例】python3 like.py minhaodeng 12345678 -ap



-p, --pull [field1] [field2] ...
------------------------------------------------------------------------
脚本根据IG用户名，自动从后台获取最近登录成功过的密码，代理，cookie，任务（仅run.py支持）。
pull后面可以加若干个field参数，表示具体需要pull哪些信息。其值可能为password，proxy，cookie，tasks。
如果不指明具体想pull的信息，则默认为四个参数全部获取。
如果本地已有当前IG用户的cookie，pull不会覆盖已有的cookie。
【举例1】python3 like.py minhaodeng -p
pull最近登录成功的密码，代理，cookie
【举例2】python3 run.py minhaodeng -p password tasks cookie -ap
pull最近登录成功的密码，代理，任务，但没说要代理。所以后面可以跟上-ap使用新代理。
【举例3】python3 run.py minhaodeng 12345678 -p -t follow
虽然pull所有信息，但其中密码"12345678"、任务"follow"已经在参数中给出，pull不会覆盖这些参数。



-pe, --pull-exclude [field1] [field2] ...
------------------------------------------------------------------------
和pull功能相同。pull-exclude同样默认获取全部信息，和pull的区别是，这里的fields值采用排除法。
【举例】python3 run.py minhaodeng -pe proxy -ap
pull最近成功登陆的信息，排除代理。然后用-ap获取新代理。



-pb, --pull-by [group1] [group2] ...
------------------------------------------------------------------------
这个参数用来给pull提供额外的指导。它代表从服务器pull信息的限制条件。其值为1个或多个group。
group的含义是，pull信息的时候，按照group来对所有登录信息分组，最终只取特定组内的最近成功登录信息。
group的值可以是version，用来区分不同版本的脚本。也可以是其他任何参数名称比如tasks。
这个参数需要和--pull联用。单独使用无效。
【举例】python3 run.py minhaodeng -p -pb version
pull最近登录成功的、使用在相同version的run.py脚本里的密码，代理，任务。



-t, --tasks task1 [task2] ...
------------------------------------------------------------------------
指定要跑的tasks。仅run.py支持。
以tasks文件夹中的任务定义文件名为参数，不加".py"后缀。
需至少指定1个任务文件。不设上限。
同一个文件中的任务，依次执行，可指定子任务的冷却时间；不同文件中的任务，相互排队。
【举例】python3 run.py minhaodeng -p -t follow like-asia
脚本将pull最近登录参数，并且混合执行tasks/follow.py和tasks/like-asia.py中定义的任务。



-rp, --retry-proxy
------------------------------------------------------------------------
在代理无法连接网络的时候，允许重试。如果不指定这个参数，在登录前，判断出代理无效的时候脚本将直接退出。
如果指定这个参数，默认以命令行询问方式取得新代理。
可以和-ap一起用。如果指定-ap，那就后台重新分配代理。




(3)其他参数
-c, --chrome
------------------------------------------------------------------------
使用chrome，不支持代理。此参数缺省时默认用firefox。



-g, --gui
------------------------------------------------------------------------
使用gui模式。此参数缺省时默认为headless模式。



-q, --query
------------------------------------------------------------------------
一旦遇到需要从命令行输入任何信息的情况，改为从数据库查询相应字段的最新值。
用于和前端配合。



-s, --silent
------------------------------------------------------------------------
在本地terminal不打印任何信息。仅仅向服务器汇报log。



-v, --version [string]
-n, --name [string]
-i, --instance [string]
------------------------------------------------------------------------
用于标记脚本。在命令行处指定的这些参数，会覆盖文件中env.config()里的声明。
三者都可以被--pull识别用以分组。


