


run-2.00（进行中）
------------------------------------------------------------------------
1.全面弃用InstaPy
2.全面改版login流程，标准化每个步骤的判定和执行，大幅提高可维护性和可拓展性


run-1.50（进行中）
------------------------------------------------------------------------
1.新增对task循环次数的支持。以前只有是否循环，现在改为指定次数
2.新增对远程任务的支持。远程任务分两类：通用的task；针对特定instagram定制的task。详见readme.txt


droplet-1.06（进行中）
------------------------------------------------------------------------
1.由于统计地不准确，此版本起，取消脚本内存统计功能
2.修复开启新脚本时，由于脚本自定义参数错误而导致的http服务器卡住的问题


run-1.49
------------------------------------------------------------------------
1.新增在云服务器上对gui模式的支持。实现原理为在云上运行Xvfb服务
2.从此版本开始，在开启gui模式的时候，可以通过插件来让chrome支持代理
3.支持warm-up模式。详见readme.txt
4.修复了chrome加载cookie出错的问题。chrome里，cookie的expiry字段，必须强制确保为unix timestamp整数
5.为进一步减少脚本流量，优化like脚本的一些细节


run-1.48
------------------------------------------------------------------------
1.新增半速版本的follow，like脚本
2.由于最近发生的代理无法连接的问题，install.sh现在固定安装66.0版本的firefox，并阻止自动更新
3.在login流程中，增加对2-way authentication页面的支持
4.将tag也作为pull提取内容的一部分。现在的--pull参数将自动提取目标脚本的tag信息
5.在login流程中，用户每尝试一次输入账号密码，都及时在服务器中用最新的IG账号标记此脚本
6.新增--disable-image参数，用于禁止加载图片


droplet-1.05
------------------------------------------------------------------------
1.支持不使用代理进行login。新增一个参数--use-proxy来控制是否使用代理，默认为使用
2.新增开机自动开启Xvfb服务以支持gui模式的脚本运行在云端


run-1.47
------------------------------------------------------------------------
1.弃用InstaPy自带的中断响应函数，自行捕捉SIGINT、SIGTERM、SIGKILL三种信号
2.为了更好地支持重试登录，扩充了脚本登录的事件集
    a.session结束和script结束现在是独立的事件，具有更强的逻辑含义
    b.session结束事件与释放proxypool代理关联，script结束事件与判断登录结果关联
3.更新脚本在query模式时的数据库查询方式，现在能更准确及时地反映前端用户输入
4.为每个脚本保存登录时输入的用户名/密码记录。用于为没登录成功的脚本提供线索
5.弃用InstaPy内置的获取followers数量办法。现在使用用户数据json页面作为信息源
6.like过程中，每次获取的50个hashtag，只留其中10个，并且打乱顺序
7.登录过程中，在发送验证码之后，也可能需要点this was me。新增对这种情况的应对


droplet-1.04
------------------------------------------------------------------------
1.配合前端、脚本两方面的需求，droplet服务在开启新login脚本时，默认设定2次重新登录机会
2.脚本从1.45到1.46改变了部分参数，导致无法重启脚本。此版本暂时对这个问题进行临时性的兼容
3.登录脚本使用rotating proxy
4.开启新脚本时，允许设定默认的-ap参数
    a.为droplet.py指定的-ap参数，将传递给droplet.py所开启的脚本
    b.对于使用rotating proxy的跑登录脚本的droplet，通过-ap参数来限制它使用一个特定的rotating proxy
5.所有配置参数均可保留至droplet.ini


run-1.46
------------------------------------------------------------------------
1.增加脚本自我重启时，对-s参数的强制继承。这个设定使得在droplet.py环境中的子进程脚本能互相避免deadlock问题
2.将从数据库中查询最新值（主要用于与前端登录方式交互，比如获取用户名密码）的超时设定从600秒提升至900秒
3.在登录过程中，如果疑似被屏蔽时，允许进行一定次数的重试
    a.重试的方式是从头开始一遍全新的过程，包括重启selenium，重新连接代理
    b.允许重试的次数超过之后，直接退出脚本
4.同时修改各种类型的重试行为的参数设定方式。限制次数由参数直接指定
5.进一步优化登录流程：
    a.使用cookies直接登录之后，可能直接面临suspicious page，而且必须处理，不能只刷新浏览器
    b.如果未能使用cookies直接登录，在输入用户名密码之后，也可能面临suspicious page，也必须妥善处理
    c.重新设计bypass-suspicious-page的方式，这个步骤不再缓慢，能瞬间完成对可疑按钮的点击
6.由于脚本参数解释器、脚本参数修改函数，多处使用，现将关于脚本参数的处理独立为一个模块


run-1.45
------------------------------------------------------------------------
1.上一版本的改动出现若干bug，现注逐一修复：
    a.由于直接使用login页面来test连接，导致cookies失效。原因是目前cookies加载安排在test连接之后，
      所以访问login页面时，手里并没有cookies。此问题的解决方案并不是提前加载cookie那么简单，在此不详述
    b.修复验证码错误的问题。查找页面元素时，注意避免已经存在而只是没显示出来的元素
2.本版本新增timeout功能。在脚本执行任何action时，如果响应超过1分钟，则判定为卡住
  卡住之后的支持三种方案（脚本默认采用第二种）
    a.直接跳过当前action
    b.重启selenium并且重新login，并继续下一个action
    c.重启脚本
3.弃用InstaPy首次检查login状态的函数，改为用常规手段检测，有轻微提速
4.修改登录成功事件的产生逻辑。现在当这个事件产生时，就已经完成和主服务器的同步（比如cookies），可以安全退出脚本
5.完善内部的stdout和stderr流的相互连接的逻辑


run-1.44
------------------------------------------------------------------------
1.修改login逻辑，再次大幅提升login速度
    a.直接使用login页面来test连接
    b.查找页面元素时，进一步优化将所有可以页面，正向及反向的特征同时查找，最大程度避免超时错误
2.增加对登录成功的判断的准确性。如果进入到/login登录页面，而非/accounts/login登录页面，则判断为此IP被屏蔽操作，直接退出
3.新增登录过程中重新获取验证码的功能，填写验证码时输入NEWONE，脚本则判定用户需要获取新验证码


droplet-1.03
------------------------------------------------------------------------
1.修复关闭子进程时，由于子进程已经退出（比如login脚本成功即自动退出）导致kill的时候发生异常的问题
2.droplet.ini配置文件也将保存上次droplet.py运行的type参数
3.解决ubuntu-18.04及以上版本中，默认不存在/etc/rc.local的问题
    a.新版install.sh自带创建rc.local的命令
    b.新版install.sh增加重复运行的判断。可以多次运行install.sh而不发生冲突


run-1.43
------------------------------------------------------------------------
1.新增-ap特性：支持按照特定的group和tag来分配代理。现在-ap可以附加group，tag两个参数，同时兼容老用法
2.修改关于统计action成功率方面和主服务器的交流方式。针对代理的脚本action成功率统计功能已经开放
3.新增无cookies模式，强制重新登录，配合前端登录模块
4.跳过慢、不准确、没用的bypass-suspicious-page，直接用刷新浏览器代替


run-1.42
------------------------------------------------------------------------
1.脚本在Monitor软重启时将清理所有firefox相关子进程，大幅回收内存
2.修复在主服务器关闭时，run.py每轮检查新任务时没抓连接异常导致的退出


droplet-1.02
------------------------------------------------------------------------
1.增加异常捕捉判断。增加对错误请求或恶意请求的防护能力
2.优化droplet服务的管理办法。现升级为由一个独立的daemon进程长期驻留。完成实际任务的worker进程作为其子进程
3.新增droplet名称保留功能。只有第一次启动服务的时候需要-n指定名称，以后python3 droplet.py即可
4.新增重启操作系统功能，操作系统重启后，droplet服务将自动开启，并且保留重启之前所有脚本
    a.重启操作系统时，开机自动mount虚拟内存
    b.重启操作系统后，droplet服务自动开启时，会自动使用重启之前的droplet-name
    c.重启操作系统后，droplet服务将自动开启在screen中。登录ssh后可直接通过screen -r访问
5.新增install.sh自动安装环境脚本
    a.自动安装所有与脚本相关的环境
    b.自动设置虚拟内存。install.sh接受一个参数表示虚拟内存大小，例如"20G"。如果没给参数，默认7G
    c.自动将droplet.py加入系统开机任务/etc/rc.local


run-1.41
------------------------------------------------------------------------
修复脚本-rc，-rp参数缺省时自动设置错误导致循环询问代理的bug


droplet-1.01
------------------------------------------------------------------------
新增刷新droplets功能。默认情况下：
    1.droplets的状态，每30秒同步到主服务器
    2.主服务器所掌握的所有droplets的已知状态，每5秒同步到前端管理器
    3.使用refresh按钮后，所有droplets将立即和主服务器同步状态，而主服务器也迅速和前端同步状态


run-1.4
------------------------------------------------------------------------
全面支持新推出的droplet.py远程脚本管理器
配合支持主服务器后端针对每个代理做独立的action失败率统计


droplet-1.00
------------------------------------------------------------------------
droplet.py远程脚本管理器诞生！
1.支持服务器自选状态最优的droplet
2.支持对每台droplet单独管理
    a.对于droplet本身，支持两个操作：git-pull，重启服务
    b.对于droplet里的脚本，支持五个操作：新增，全部删除，全部重启，单独删除，单独重启
    c.droplet关闭时，下次启动可全部恢复上次退出前的脚本；droplet重启时也一样


run-1.32
------------------------------------------------------------------------
统计所有任务中任何类型的action的执行情况。包括成功次数，失败次数
统计信息自动同步到主服务器，配合前端即时查看


run-1.31
------------------------------------------------------------------------
支持从前端以自定义参数软重启脚本
支持在重启脚本之前，先执行git pull更新自己！


run-1.3
------------------------------------------------------------------------
支持在线接收tasks，支持启动脚本时、加载的本地任务的全部特性，在线任务与本地任务无差别
支持从前端发送指令，重启脚本自身，即软重启。
软重启基于本版本中新增的在线任务机制。重启的本质是一个特殊的在线任务。